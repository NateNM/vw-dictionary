{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  name: 'App',\n  setup() {\n    let validQuery = ref(true);\n    const definitionArray = ref([]);\n    const word = ref(\"\");\n    async function getDefinitions() {\n      console.log(word.value);\n      definitionArray.value.splice(0, definitionArray.value.length);\n      try {\n        const url = \"https://api.dictionaryapi.dev/api/v2/entries/en/\" + word.value;\n        const {\n          data\n        } = await axios.get(url);\n        console.log(data);\n        data.forEach(({\n          meanings\n        }) => meanings.forEach(({\n          definitions\n        }) => definitions.forEach(({\n          definition\n        }) => {\n          if (typeof definition === \"string\") {\n            definitionArray.value.push(definition);\n            console.log(definition);\n          }\n        })));\n      } catch (error) {\n        validQuery.value = false;\n      }\n    }\n    return {\n      word,\n      getDefinitions,\n      definitionArray,\n      validQuery\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","name","setup","validQuery","definitionArray","word","getDefinitions","console","log","value","splice","length","url","data","get","forEach","meanings","definitions","definition","push","error"],"sources":["/home/nathaniel/Projects/vw-dictionary/src/App.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"getDefinitions()\">\n    <input placeholder=\"myWord\" type=\"text\" id=\"word\" v-model=\"word\">\n    <button type=\"submit\">Get definition</button>\n  </form>\n  <p v-if=\"!validQuiery\">Error: The word you are searching for does not exist. Please try a differnt word.</p>\n  <div v-for=\"definition in definitionArray\" :key=\"definition\">\n    <div>{{ definition }}</div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: 'App',\n  setup() {\n    let validQuery = ref(true)\n    const definitionArray = ref([])\n    const word = ref(\"\");\n    async function getDefinitions() {\n      console.log(word.value);\n      definitionArray.value.splice(0, definitionArray.value.length)\n      try{\n        const url =  \"https://api.dictionaryapi.dev/api/v2/entries/en/\" + word.value;\n        const { data } = await axios.get(url);\n        console.log(data);\n        data.forEach(({ meanings }) =>\n          meanings.forEach(({ definitions }) =>\n            definitions.forEach(({ definition }) => {\n              if (typeof definition === \"string\") {\n                definitionArray.value.push(definition)\n                console.log(definition);\n              }\n            })\n          )\n        );\n      } catch (error){\n          validQuery.value = false;\n      }\n    }\n\n    return { word, getDefinitions, definitionArray, validQuery };\n  }\n}\n</script>\n\n<style>\n\n</style>\n"],"mappings":";AAYA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,KAAKA,CAAA,EAAG;IACN,IAAIC,UAAS,GAAIJ,GAAG,CAAC,IAAI;IACzB,MAAMK,eAAc,GAAIL,GAAG,CAAC,EAAE;IAC9B,MAAMM,IAAG,GAAIN,GAAG,CAAC,EAAE,CAAC;IACpB,eAAeO,cAAcA,CAAA,EAAG;MAC9BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,KAAK,CAAC;MACvBL,eAAe,CAACK,KAAK,CAACC,MAAM,CAAC,CAAC,EAAEN,eAAe,CAACK,KAAK,CAACE,MAAM;MAC5D,IAAG;QACD,MAAMC,GAAE,GAAK,kDAAiD,GAAIP,IAAI,CAACI,KAAK;QAC5E,MAAM;UAAEI;QAAK,IAAI,MAAMb,KAAK,CAACc,GAAG,CAACF,GAAG,CAAC;QACrCL,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;QACjBA,IAAI,CAACE,OAAO,CAAC,CAAC;UAAEC;QAAS,CAAC,KACxBA,QAAQ,CAACD,OAAO,CAAC,CAAC;UAAEE;QAAY,CAAC,KAC/BA,WAAW,CAACF,OAAO,CAAC,CAAC;UAAEG;QAAW,CAAC,KAAK;UACtC,IAAI,OAAOA,UAAS,KAAM,QAAQ,EAAE;YAClCd,eAAe,CAACK,KAAK,CAACU,IAAI,CAACD,UAAU;YACrCX,OAAO,CAACC,GAAG,CAACU,UAAU,CAAC;UACzB;QACF,CAAC,CACH,CACF,CAAC;MACH,EAAE,OAAOE,KAAK,EAAC;QACXjB,UAAU,CAACM,KAAI,GAAI,KAAK;MAC5B;IACF;IAEA,OAAO;MAAEJ,IAAI;MAAEC,cAAc;MAAEF,eAAe;MAAED;IAAW,CAAC;EAC9D;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
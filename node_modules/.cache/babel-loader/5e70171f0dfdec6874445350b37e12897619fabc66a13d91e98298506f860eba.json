{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  name: 'App',\n  setup() {\n    const definitionArray = ref([]);\n    const word = ref(\"\");\n    async function getDefinitions() {\n      console.log(word.value);\n      const url = \"https://api.dictionaryapi.dev/api/v2/entries/en/\" + word.value;\n      const {\n        data\n      } = await axios.get(url);\n      console.log(data);\n      data.forEach(({\n        meanings\n      }) => meanings.forEach(({\n        definitions\n      }) => definitions.forEach(({\n        definition\n      }) => {\n        if (typeof definition === \"string\") {\n          definitionArray.value.push(definition);\n          console.log(definition);\n        }\n      })));\n    }\n    return {\n      word,\n      getDefinitions,\n      defini\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","name","setup","definitionArray","word","getDefinitions","console","log","value","url","data","get","forEach","meanings","definitions","definition","push","defini"],"sources":["/home/nathaniel/Projects/vw-dictionary/src/App.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"getDefinitions()\">\n    <input placeholder=\"myWord\" type=\"text\" id=\"word\" v-model=\"word\">\n    <button type=\"submit\">Get definition</button>\n  </form>\n  <div v-for=\"definition in definitionArray\" :key=\"definition\">\n    <div>{{ definition }}</div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: 'App',\n  setup() {\n    const definitionArray = ref([])\n    const word = ref(\"\");\n    async function getDefinitions() {\n      console.log(word.value);\n\n      const url =  \"https://api.dictionaryapi.dev/api/v2/entries/en/\" + word.value;\n      const { data } = await axios.get(url);\n      console.log(data);\n      data.forEach(({ meanings }) =>\n        meanings.forEach(({ definitions }) =>\n          definitions.forEach(({ definition }) => {\n            if (typeof definition === \"string\") {\n              definitionArray.value.push(definition)\n              console.log(definition);\n            }\n          })\n        )\n      );\n    }\n\n    return { word, getDefinitions, defini };\n  }\n}\n</script>\n\n<style>\n\n</style>\n"],"mappings":";AAWA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,KAAKA,CAAA,EAAG;IACN,MAAMC,eAAc,GAAIJ,GAAG,CAAC,EAAE;IAC9B,MAAMK,IAAG,GAAIL,GAAG,CAAC,EAAE,CAAC;IACpB,eAAeM,cAAcA,CAAA,EAAG;MAC9BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,KAAK,CAAC;MAEvB,MAAMC,GAAE,GAAK,kDAAiD,GAAIL,IAAI,CAACI,KAAK;MAC5E,MAAM;QAAEE;MAAK,IAAI,MAAMV,KAAK,CAACW,GAAG,CAACF,GAAG,CAAC;MACrCH,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;MACjBA,IAAI,CAACE,OAAO,CAAC,CAAC;QAAEC;MAAS,CAAC,KACxBA,QAAQ,CAACD,OAAO,CAAC,CAAC;QAAEE;MAAY,CAAC,KAC/BA,WAAW,CAACF,OAAO,CAAC,CAAC;QAAEG;MAAW,CAAC,KAAK;QACtC,IAAI,OAAOA,UAAS,KAAM,QAAQ,EAAE;UAClCZ,eAAe,CAACK,KAAK,CAACQ,IAAI,CAACD,UAAU;UACrCT,OAAO,CAACC,GAAG,CAACQ,UAAU,CAAC;QACzB;MACF,CAAC,CACH,CACF,CAAC;IACH;IAEA,OAAO;MAAEX,IAAI;MAAEC,cAAc;MAAEY;IAAO,CAAC;EACzC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}